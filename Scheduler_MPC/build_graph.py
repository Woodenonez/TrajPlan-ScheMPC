import networkx as nx
import matplotlib.pyplot as plt
import math


nodes = {"d1": [12, 83], "d2": [37, 83], "N0": [12, 75], "N1": [18, 75], "N2": [32, 75], "N3": [37, 75], "N4": [18, 67], "L1": [25, 67], "N5": [32, 67], "P1": [3, 58], "N6": [12, 58], "N7": [18, 58], "N8": [32, 58], "N9": [37, 58], "P5": [47, 58], "N10": [18, 49], "L2": [25, 49], "N11": [32, 49], "P2": [3, 40], "N12": [12, 40], "N13": [18, 40], "N14": [32, 40], "N15": [37, 40], "P6": [47, 40], "N16": [18, 31], "L3": [25, 31], "N17": [32, 31], "P3": [3, 22], "N18": [12, 22], "N19": [18, 22], "N20": [32, 22], "N21": [37, 22], "P7": [47, 22], "N22": [18, 13], "L4": [25, 13], "N23": [32, 13], "P4": [3, 4], "N24": [12, 4], "N25": [18, 4], "N26": [32, 4], "N27": [37, 4], "P8": [47, 4]}
edges = [["d1", "N0"], ["N0", "N6"], ["N6", "N12"], ["N12", "N18"], ["N18", "N24"], ["N1", "N4"], ["N4", "N7"], ["N7", "N10"], ["N10", "N13"], ["N13", "N16"], ["N16", "N19"], ["N19", "N22"], ["N22", "N25"], ["N2", "N5"], ["N5", "N8"], ["N8", "N11"], ["N11", "N14"], ["N14", "N17"], ["N17", "N20"], ["N20", "N23"], ["N23", "N26"], ["d2", "N3"], ["N3", "N9"], ["N9", "N15"], ["N15", "N21"], ["N21", "N27"], ["N0", "N1"], ["N2", "N3"], ["N4", "L1"], ["L1", "N5"], ["P1", "N6"], ["N6", "N7"], ["N8", "N9"], ["N9", "P5"], ["N10", "L2"], ["L2", "N11"], ["P2", "N12"], ["N12", "N13"], ["N14", "N15"], ["N15", "P6"], ["N16", "L3"], ["L3", "N17"], ["P3", "N18"], ["N18", "N19"], ["N20", "N21"], ["N21", "P7"], ["N22", "L4"], ["L4", "N23"], ["P4", "N24"], ["N24", "N25"], ["N26", "N27"], ["N27", "P8"]]

edges_rev = [[i[1],i[0]] for i in edges]

edges += edges_rev

nodes_dict = {
    i:{
        'pos':nodes[i],
        'next':[j[1] for j in edges if j[0] == i]}
    for i in nodes
}

# for i in nodes_dict:
#     print(i,nodes_dict[i]['next'])

# for i in edges:
#     print(f'\"{i[0]},{i[1]}\":[{round(math.dist((nodes[i[0]]),(nodes[i[1]])))},1],')

G = nx.Graph()
for i in nodes_dict:
    G.add_node(i)
for i in edges:
    G.add_edge(i[0],i[1])

nx.set_node_attributes(G,nodes_dict)
nx.draw(G,nx.get_node_attributes(G,'pos'), with_labels=True)
plt.show()
